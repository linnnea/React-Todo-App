{"ast":null,"code":"function initializeNotes() {\n  localStorage.setItem('notes', JSON.stringify([]));\n  return [];\n}\n\nconst archive = [];\nexport function createNote(title, body) {\n  const notes = getNotes();\n  const note = {\n    id: Date.now(),\n    title,\n    body\n  };\n  notes.unshift(note);\n  console.log('about to save', notes);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem('notes', jsonNoteArray);\n}\nexport function getNote(id) {\n  const notes = getNotes();\n  return notes.find(note => note.id === id);\n}\nexport function getNotes() {\n  const notes = localStorage.getItem('notes');\n\n  if (!notes) {\n    return initializeNotes();\n  }\n\n  const parsedNotes = JSON.parse(notes);\n  return parsedNotes;\n}\nexport function updateNote(id, title, body) {\n  const notes = getNotes();\n  const indexToUpdate = notes.findIndex(note => note.id === id);\n  const note = {\n    id,\n    title,\n    body\n  }; // removes old note\n\n  notes.splice(indexToUpdate, 1); // adds new note to start\n\n  notes.splice(0, 0, note);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem('notes', jsonNoteArray);\n} // updateNote(3, 'hello', 'blabla')\n\nexport function deleteNote(id) {\n  const notes = getNotes();\n  const indexToDelete = notes.findIndex(note => note.id === id);\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem('notes', jsonNoteArray);\n}\nexport function archiveNote(note) {\n  // add to archives\n  archive.push(note); // remove the note from notes\n\n  deleteNote(note.id);\n}\nexport function unArchiveNote(note) {\n  // add to notes\n  const notes = getNotes();\n  notes.push(note); // remove the note from archive\n\n  deleteFromArchive(note.id);\n  const jsonNoteArray = JSON.stringify(notes);\n  localStorage.setItem('notes', jsonNoteArray);\n}\nexport function deleteFromArchive(id) {\n  //const notes = getNotes()\n  const indexToDelete = archive.findIndex(note => note.id === id);\n  if (indexToDelete >= 0) archive.splice(indexToDelete, 1); //return true\n  // const jsonNoteArray = JSON.stringify(notes)\n  // localStorage.setItem('notes', jsonNoteArray)\n}\nexport function getArchive() {\n  return archive;\n}","map":{"version":3,"sources":["/Users/linneawennberg/Desktop/WUE/react/codeAlong/notes1/src/utils/noteHelpers.js"],"names":["initializeNotes","localStorage","setItem","JSON","stringify","archive","createNote","title","body","notes","getNotes","note","id","Date","now","unshift","console","log","jsonNoteArray","getNote","find","getItem","parsedNotes","parse","updateNote","indexToUpdate","findIndex","splice","deleteNote","indexToDelete","archiveNote","push","unArchiveNote","deleteFromArchive","getArchive"],"mappings":"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","sourcesContent":["function initializeNotes() {\n\tlocalStorage.setItem('notes', JSON.stringify([]))\n\treturn []\n}\n\nconst archive = []\n\nexport function createNote(title, body) {\n\tconst notes = getNotes()\n\tconst note = {\n\t\tid: Date.now(),\n\t\ttitle,\n\t\tbody\n\t}\n\tnotes.unshift(note)\n\tconsole.log('about to save', notes)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n\nexport function getNote(id) {\n\tconst notes = getNotes()\n\treturn notes.find((note) => note.id === id)\n}\n\nexport function getNotes() {\n\tconst notes = localStorage.getItem('notes')\n\tif (!notes) {\n\t\treturn initializeNotes()\n\t}\n\tconst parsedNotes = JSON.parse(notes)\n\treturn parsedNotes\n}\n\nexport function updateNote(id, title, body) {\n\tconst notes = getNotes()\n\tconst indexToUpdate = notes.findIndex((note) => note.id === id)\n\tconst note = {\n\t\tid,\n\t\ttitle,\n\t\tbody\n\t}\n\t// removes old note\n\tnotes.splice(indexToUpdate, 1)\n\t// adds new note to start\n\tnotes.splice(0, 0, note)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n\n// updateNote(3, 'hello', 'blabla')\n\nexport function deleteNote(id) {\n\tconst notes = getNotes()\n\tconst indexToDelete = notes.findIndex((note) => note.id === id)\n\tif (indexToDelete >= 0) notes.splice(indexToDelete, 1)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n\nexport function archiveNote(note) {\n\t// add to archives\n\tarchive.push(note)\n\t// remove the note from notes\n\tdeleteNote(note.id)\n}\n\nexport function unArchiveNote(note) {\n\t// add to notes\n\tconst notes = getNotes()\n\tnotes.push(note)\n\t// remove the note from archive\n\tdeleteFromArchive(note.id)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n\nexport function deleteFromArchive(id) {\n\t//const notes = getNotes()\n\tconst indexToDelete = archive.findIndex((note) => note.id === id)\n\tif (indexToDelete >= 0) archive.splice(indexToDelete, 1)\n\t//return true\n\t// const jsonNoteArray = JSON.stringify(notes)\n\t// localStorage.setItem('notes', jsonNoteArray)\n}\n\nexport function getArchive() {\n\treturn archive\n}\n"]},"metadata":{},"sourceType":"module"}