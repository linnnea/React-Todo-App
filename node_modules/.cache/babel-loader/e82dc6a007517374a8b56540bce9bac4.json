{"ast":null,"code":"/*\nC: Create a note\nR: Read (get) a note\nU: Update a note\nD: Delete a note\n*/\n// const notes = [\n// \t{ id: 1, title: 'New note', body: 'Hey!' },\n// \t{ id: 2, title: 'Second note', body: 'Empty' },\n// \t{ id: 3, title: 'Third note', body: 'Something' }\n// ]\nexport function createNote(title, body) {\n  const note = {\n    id: Date.now(),\n    title,\n    body\n  };\n  const noteArray = [note];\n  localStorage.setItem('notes', noteArray); // notes.unshift(note)\n  // return note\n}\nexport function getNote(id) {\n  return notes.find(note => note.id === id);\n}\nexport function getNotes() {\n  // return notes\n  const notes = localStorage.getItem('notes');\n  localStorage.getItem('notes', notes);\n}\nexport function updateNote(id, title, body) {\n  const indexToUpdate = notes.findIndex(note => note.id === id);\n  const note = {\n    id,\n    title,\n    body\n  }; // removes old note\n\n  notes.splice(indexToUpdate, 1); // adds new note to start\n\n  notes.splice(0, 0, note);\n  return notes;\n} // updateNote(3, 'hello', 'blabla')\n\nexport function deleteNote(id) {\n  const indexToDelete = notes.findIndex(note => note.id === id);\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1);\n  return true;\n}","map":{"version":3,"sources":["/Users/linneawennberg/Desktop/ChangemakerEdu/React/CodeAlong/notes1/src/utils/noteHelpers.js"],"names":["createNote","title","body","note","id","Date","now","noteArray","localStorage","setItem","getNote","notes","find","getNotes","getItem","updateNote","indexToUpdate","findIndex","splice","deleteNote","indexToDelete"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AACvC,QAAMC,IAAI,GAAG;AACZC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADQ;AAEZL,IAAAA,KAFY;AAGZC,IAAAA;AAHY,GAAb;AAKA,QAAMK,SAAS,GAAG,CAACJ,IAAD,CAAlB;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,SAA9B,EAPuC,CAQvC;AACA;AACA;AAED,OAAO,SAASG,OAAT,CAAiBN,EAAjB,EAAqB;AAC3B,SAAOO,KAAK,CAACC,IAAN,CAAYT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAjC,CAAP;AACA;AAED,OAAO,SAASS,QAAT,GAAoB;AAC1B;AACA,QAAMF,KAAK,GAAGH,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAd;AACAN,EAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACA;AAED,OAAO,SAASI,UAAT,CAAoBX,EAApB,EAAwBH,KAAxB,EAA+BC,IAA/B,EAAqC;AAC3C,QAAMc,aAAa,GAAGL,KAAK,CAACM,SAAN,CAAiBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAtC,CAAtB;AACA,QAAMD,IAAI,GAAG;AACZC,IAAAA,EADY;AAEZH,IAAAA,KAFY;AAGZC,IAAAA;AAHY,GAAb,CAF2C,CAO3C;;AACAS,EAAAA,KAAK,CAACO,MAAN,CAAaF,aAAb,EAA4B,CAA5B,EAR2C,CAS3C;;AACAL,EAAAA,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmBf,IAAnB;AACA,SAAOQ,KAAP;AACA,C,CAED;;AAEA,OAAO,SAASQ,UAAT,CAAoBf,EAApB,EAAwB;AAC9B,QAAMgB,aAAa,GAAGT,KAAK,CAACM,SAAN,CAAiBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAtC,CAAtB;AACA,MAAIgB,aAAa,IAAI,CAArB,EAAwBT,KAAK,CAACO,MAAN,CAAaE,aAAb,EAA4B,CAA5B;AACxB,SAAO,IAAP;AACA","sourcesContent":["/*\nC: Create a note\nR: Read (get) a note\nU: Update a note\nD: Delete a note\n*/\n\n// const notes = [\n// \t{ id: 1, title: 'New note', body: 'Hey!' },\n// \t{ id: 2, title: 'Second note', body: 'Empty' },\n// \t{ id: 3, title: 'Third note', body: 'Something' }\n// ]\n\nexport function createNote(title, body) {\n\tconst note = {\n\t\tid: Date.now(),\n\t\ttitle,\n\t\tbody\n\t}\n\tconst noteArray = [note]\n\tlocalStorage.setItem('notes', noteArray)\n\t// notes.unshift(note)\n\t// return note\n}\n\nexport function getNote(id) {\n\treturn notes.find((note) => note.id === id)\n}\n\nexport function getNotes() {\n\t// return notes\n\tconst notes = localStorage.getItem('notes')\n\tlocalStorage.getItem('notes', notes)\n}\n\nexport function updateNote(id, title, body) {\n\tconst indexToUpdate = notes.findIndex((note) => note.id === id)\n\tconst note = {\n\t\tid,\n\t\ttitle,\n\t\tbody\n\t}\n\t// removes old note\n\tnotes.splice(indexToUpdate, 1)\n\t// adds new note to start\n\tnotes.splice(0, 0, note)\n\treturn notes\n}\n\n// updateNote(3, 'hello', 'blabla')\n\nexport function deleteNote(id) {\n\tconst indexToDelete = notes.findIndex((note) => note.id === id)\n\tif (indexToDelete >= 0) notes.splice(indexToDelete, 1)\n\treturn true\n}\n"]},"metadata":{},"sourceType":"module"}