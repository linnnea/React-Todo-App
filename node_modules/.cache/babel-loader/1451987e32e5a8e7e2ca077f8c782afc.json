{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/linneawennberg/Desktop/ChangemakerEdu/React/CodeAlong/notes1/src/examples/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { createNote, getNotes } from '../utils/noteHelpers';\n/*\nRequired\n1. (DONE) write text in fields and store it as a new note\n2. (DONE) click on a note and display text in the fields\n3. edit the field w/ text from a selected note and save it\n*/\n\nexport default function InputForm({\n  selectedNote\n}) {\n  _s();\n\n  console.log(selectedNote);\n  const [title, setTitle] = useState('');\n\n  const onChangeTitle = e => setTitle(e.target.value);\n\n  const onSave = e => {\n    e.preventDefault();\n    console.log('Saving new note:', title);\n    createNote(title, '');\n    console.log(getNotes());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"mb-4\",\n        size: \"lg\",\n        value: selectedNote ? selectedNote.title : '',\n        onChange: onChangeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onSave,\n      className: \"mr-2\",\n      variant: \"success\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(InputForm, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n\n_c = InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/Users/linneawennberg/Desktop/ChangemakerEdu/React/CodeAlong/notes1/src/examples/Form.js"],"names":["React","useState","Form","Button","createNote","getNotes","InputForm","selectedNote","console","log","title","setTitle","onChangeTitle","e","target","value","onSave","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,sBAArC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAqC;AAAA;;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMW,aAAa,GAAIC,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;;AACA,QAAMC,MAAM,GAAIH,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,KAAhC;AACAN,IAAAA,UAAU,CAACM,KAAD,EAAQ,EAAR,CAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,EAApB;AACA,GALD;;AAOA,sBACC,QAAC,IAAD;AAAA,4BACC,QAAC,IAAD,CAAM,KAAN;AAAA,8BACC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,IAAD,CAAM,OAAN;AACC,QAAA,SAAS,EAAC,MADX;AAEC,QAAA,IAAI,EAAC,IAFN;AAGC,QAAA,KAAK,EAAEE,YAAY,GAAGA,YAAY,CAACG,KAAhB,GAAwB,EAH5C;AAIC,QAAA,QAAQ,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAUC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,MAAjB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,OAAO,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;;GA3BuBV,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createNote, getNotes } from '../utils/noteHelpers'\n\n/*\nRequired\n1. (DONE) write text in fields and store it as a new note\n2. (DONE) click on a note and display text in the fields\n3. edit the field w/ text from a selected note and save it\n*/\n\nexport default function InputForm({ selectedNote }) {\n\tconsole.log(selectedNote)\n\tconst [title, setTitle] = useState('')\n\tconst onChangeTitle = (e) => setTitle(e.target.value)\n\tconst onSave = (e) => {\n\t\te.preventDefault()\n\t\tconsole.log('Saving new note:', title)\n\t\tcreateNote(title, '')\n\t\tconsole.log(getNotes())\n\t}\n\n\treturn (\n\t\t<Form>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tclassName=\"mb-4\"\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\tvalue={selectedNote ? selectedNote.title : ''}\n\t\t\t\t\tonChange={onChangeTitle}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Button onClick={onSave} className=\"mr-2\" variant=\"success\">\n\t\t\t\tSave\n\t\t\t</Button>\n\t\t</Form>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}