{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/linneawennberg/Desktop/WUE/react/codeAlong/notes1/src/context/LanguageContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Import Context\n\nimport en from './i18n/en.json';\nimport sv from './i18n/sv.json';\nexport const LanguageContext = /*#__PURE__*/React.createContext(null);\nconst getLanguageFromString = {\n  sv,\n  en\n};\nexport default function Provider({\n  children,\n  languageCode\n}) {\n  _s();\n\n  const [lang, setLang] = useState(en);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      lang,\n      setLang\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Provider, \"OnpQ9AbHRawlUvd1VEvpeWuG8tw=\");\n\n_c = Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/linneawennberg/Desktop/WUE/react/codeAlong/notes1/src/context/LanguageContext.js"],"names":["React","useState","en","sv","LanguageContext","createContext","getLanguageFromString","Provider","children","languageCode","lang","setLang"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,EAAP,MAAe,gBAAf;AACA,OAAOC,EAAP,MAAe,gBAAf;AAEA,OAAO,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAxB;AAEP,MAAMC,qBAAqB,GAAG;AAC7BH,EAAAA,EAD6B;AAE7BD,EAAAA;AAF6B,CAA9B;AAKA,eAAe,SAASK,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,EAA8C;AAAA;;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACC,EAAD,CAAhC;AACA,sBAAO,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAjC;AAAA,cAAqDH;AAArD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAHuBD,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\n\n// Import Context\nimport en from './i18n/en.json'\nimport sv from './i18n/sv.json'\n\nexport const LanguageContext = React.createContext(null)\n\nconst getLanguageFromString = {\n\tsv,\n\ten\n}\n\nexport default function Provider({ children, languageCode }) {\n\tconst [lang, setLang] = useState(en)\n\treturn <LanguageContext.Provider value={{ lang, setLang }}>{children}</LanguageContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}